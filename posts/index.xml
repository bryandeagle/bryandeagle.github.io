<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Bryan Deagle</title>
        <link>https://dea.gl/posts/</link>
        <description>Recent content in Posts on Bryan Deagle</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Tue, 01 Sep 2020 00:00:00 +0000</lastBuildDate>
        <atom:link href="https://dea.gl/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Hackerrank: Athlete Sort</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-athlete-sort/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-athlete-sort/</guid>
            <description>Problem You are given a spreadsheet that contains a list of N athletes and their details (such as age, height, weight and so on). You are required to sort the data based on the Kth attribute and print the final resulting table. Follow the example given below for better understanding.
Note that K is indexed from 0 to M-1, where M is the number of attributes.
Note: If two attributes are the same for different rows, for example, if two atheletes are of the same age, print the row that appeared first in the input.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>You are given a spreadsheet that contains a list of N athletes and their details (such as age, height, weight and so on). You are required to sort the data based on the Kth attribute and print the final resulting table. Follow the example given below for better understanding.</p>
<p>Note that K is indexed from 0 to M-1, where M is the number of attributes.</p>
<p><strong>Note:</strong> If two attributes are the same for different rows, for example, if two atheletes are of the same age, print the row that appeared first in the input.</p>
<h2 id="solution">Solution</h2>
<pre><code>n,m = map(int, input().split())
data = []
for _ in range(n):
    data.append(list(map(int, input().split())))
k = int(input())

data.sort(key=lambda x:x[k])

for l in data:
    print(' '.join([str(i) for i in l]))
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Company Logo</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-company-logo/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-company-logo/</guid>
            <description>Problem A newly opened multinational brand has decided to base their company logo on the three most common characters in the company name. They are now trying out various combinations of company names and logos based on this condition. Given a string , which is the company name in lowercase letters, your task is to find the top three most common characters in the string.
 Print the three most common characters along with their occurrence count.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>A newly opened multinational brand has decided to base their company logo on the three most common characters in the company name. They are now trying out various combinations of company names and logos based on this condition. Given a string , which is the company name in lowercase letters, your task is to find the top three most common characters in the string.</p>
<ul>
<li>Print the three most common characters along with their occurrence count.</li>
<li>Sort in descending order of occurrence count.</li>
<li>If the occurrence count is the same, sort the characters in alphabetical order.</li>
</ul>
<p>For example, according to the conditions described above,</p>
<p>GOOGLE would have it&rsquo;s logo with the letters G, O, E.</p>
<h2 id="solution">Solution</h2>
<pre><code>from collections import Counter
for i in Counter(sorted(input())).most_common(3):
    print(*i)
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Compress the String!</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-compress-the-string/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-compress-the-string/</guid>
            <description>Problem In this task, we would like for you to appreciate the usefulness of the groupby() function of itertools . To read more about this function, Check this out .
You are given a string S. Suppose a character &amp;lsquo;c&amp;rsquo; occurs consecutively X times in the string. Replace these consecutive occurrences of the character &amp;lsquo;c&amp;rsquo; with (X, c) in the string.
For a better understanding of the problem, check the explanation.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>In this task, we would like for you to appreciate the usefulness of the groupby() function of itertools . To read more about this function, Check this out .</p>
<p>You are given a string S. Suppose a character &lsquo;c&rsquo; occurs consecutively X times in the string. Replace these consecutive occurrences of the character &lsquo;c&rsquo; with (X, c) in the string.</p>
<p>For a better understanding of the problem, check the explanation.</p>
<h2 id="solution">Solution</h2>
<pre><code>from itertools import groupby

print(' '.join(['({}, {})'.format(len(list(g)), k) for k,g in groupby(input())]))
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Dealing with Complex Numbers</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-dealing-with-complex-numbers/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-dealing-with-complex-numbers/</guid>
            <description>Problem For this challenge, you are given two complex numbers, and you have to print the result of their addition, subtraction, multiplication, division and modulus operations.
The real and imaginary precision part should be correct up to two decimal places.
Solution import mathclass Complex(object):def __init__(self, real, imaginary):self.n = complex(real, imaginary)self.real = realself.imaginary = imaginarydef __add__(self, no):res = self.n + no.nreturn Complex(res.real, res.imag)def __sub__(self, no):res = self.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>For this challenge, you are given two complex numbers, and you have to print the result of their addition, subtraction, multiplication, division and modulus operations.</p>
<p>The real and imaginary precision part should be correct up to two decimal places.</p>
<h2 id="solution">Solution</h2>
<pre><code>import math

class Complex(object):
    def __init__(self, real, imaginary):
        self.n = complex(real, imaginary)
        self.real = real
        self.imaginary = imaginary

    def __add__(self, no):
        res = self.n + no.n
        return Complex(res.real, res.imag)

    def __sub__(self, no):
        res = self.n - no.n
        return Complex(res.real, res.imag)

    def __mul__(self, no):
        res = self.n * no.n
        return Complex(res.real, res.imag)

    def __truediv__(self, no):
        res = self.n / no.n
        return Complex(res.real, res.imag)

    def mod(self):
        res = math.sqrt(self.n.real ** 2 + self.n.imag ** 2)
        return Complex(res.real, res.imag)

    def __str__(self):
        if self.imaginary == 0:
            result = &quot;%.2f+0.00i&quot; % (self.real)
        elif self.real == 0:
            if self.imaginary &gt;= 0:
                result = &quot;0.00+%.2fi&quot; % (self.imaginary)
            else:
                result = &quot;0.00-%.2fi&quot; % (abs(self.imaginary))
        elif self.imaginary &gt; 0:
            result = &quot;%.2f+%.2fi&quot; % (self.real, self.imaginary)
        else:
            result = &quot;%.2f-%.2fi&quot; % (self.real, abs(self.imaginary))
        return result

if __name__ == '__main__':
    c = map(float, input().split())
    d = map(float, input().split())
    x = Complex(*c)
    y = Complex(*d)
    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\n')
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Default Arguments</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-default-arguments/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-default-arguments/</guid>
            <description>Problem In this challenge, the task is to debug the existing code to successfully execute all provided test files.
Python supports a useful concept of default argument values. For each keyword argument of a function, we can assign a default value which is going to be used as the value of said argument if the function is called without it. For example, consider the following increment function:
def increment_by(n, increment=1):return n + incrementThe functions works like this:</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>In this challenge, the task is to debug the existing code to successfully execute all provided test files.</p>
<p>Python supports a useful concept of default argument values. For each keyword argument of a function, we can assign a default value which is going to be used as the value of said argument if the function is called without it. For example, consider the following increment function:</p>
<pre><code>def increment_by(n, increment=1):
    return n + increment
</code></pre><p>The functions works like this:</p>
<pre><code>&gt;&gt;&gt; increment_by(5, 2)
7
&gt;&gt;&gt; increment_by(4)
5
&gt;&gt;&gt;
</code></pre><p>Debug the given function print_from_stream using the default value of one of its arguments.</p>
<p>The function has the following signature:</p>
<pre><code>def print_from_stream(n, stream)
</code></pre><p>This function should print the first n values returned by get_next() method of stream object provided as an argument. Each of these values should be printed in a separate line.</p>
<p>Whenever the function is called without the stream argument, it should use an instance of EvenStream class defined in the code stubs below as the value of stream.</p>
<p>Your function will be tested on several cases by the locked template code.</p>
<h2 id="solution">Solution</h2>
<pre><code>def print_from_stream(n, stream=None):
    if stream is None:
        stream = EvenStream()
    for _ in range(n):
        print(stream.get_next())
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Find Angle MBC</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-find-angle-mbc/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-find-angle-mbc/</guid>
            <description>Problem ABC is a right triangle, 90° at B. Therefore, ∠ABC = 90°.
Point M is the midpoint of hypotenuse AC.
You are given the lengths AB and BC.
Your task is to find ∠MBC (angle θ°, as shown in the figure) in degrees.
Solution import cmathimport mathi = int(input())r = int(input())a = complex(r, i)print(&#39;{:.0f}°&#39;.format(round(math.degrees(cmath.phase(a)),0)))</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>ABC is a right triangle, 90° at B. Therefore, ∠ABC = 90°.</p>
<p>Point M is the midpoint of hypotenuse AC.</p>
<p>You are given the lengths AB and BC.</p>
<p>Your task is to find ∠MBC (angle θ°, as shown in the figure) in degrees.</p>
<h2 id="solution">Solution</h2>
<pre><code>import cmath
import math

i = int(input())
r = int(input())
a = complex(r, i)
print('{:.0f}°'.format(round(math.degrees(cmath.phase(a)),0)))
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: ginortS</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-ginorts/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-ginorts/</guid>
            <description>Problem You are given a string S. S contains alphanumeric characters only.
Your task is to sort the string in the following manner:
 All sorted lowercase letters are ahead of uppercase letters. All sorted uppercase letters are ahead of digits. All sorted odd digits are ahead of sorted even digits.  Solution print(&#39;&#39;.join(sorted(input(), key=lambda i:&#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ 1357902468&#39;.find(i))))</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>You are given a string S.
S contains alphanumeric characters only.</p>
<p>Your task is to sort the string  in the following manner:</p>
<ul>
<li>All sorted lowercase letters are ahead of uppercase letters.</li>
<li>All sorted uppercase letters are ahead of digits.</li>
<li>All sorted odd digits are ahead of sorted even digits.</li>
</ul>
<h2 id="solution">Solution</h2>
<pre><code>print(''.join(sorted(input(), key=lambda i:'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ 1357902468'.find(i))))
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Iterables and Iterators</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-iterables-and-iterators/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-iterables-and-iterators/</guid>
            <description>Problem The itertools module standardizes a core set of fast, memory efficient tools that are useful by themselves or in combination. Together, they form an iterator algebra making it possible to construct specialized tools succinctly and efficiently in pure Python.
To read more about the functions in this module, check out their documentation here.
You are given a list of N lowercase English letters. For a given integer K, you can select any K indices (assume 1-based indexing) with a uniform probability from the list.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>The itertools module standardizes a core set of fast, memory efficient tools that are useful by themselves or in combination. Together, they form an iterator algebra making it possible to construct specialized tools succinctly and efficiently in pure Python.</p>
<p>To read more about the functions in this module, check out their documentation here.</p>
<p>You are given a list of N lowercase English letters. For a given integer K, you can select any K indices (assume 1-based indexing) with a uniform probability from the list.</p>
<p>Find the probability that at least one of the K indices selected will contain the letter: &lsquo;a&rsquo;.</p>
<h2 id="solution">Solution</h2>
<pre><code>from itertools import permutations

n = int(input())
s = input().replace(' ', '')
k = int(input())
p = [''.join(x) for x in permutations(s, k)]

num = 0
for x in p:
    if 'a' in x:
        num += 1

print(num/len(p))
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Maximize It!</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-maximize-it/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-maximize-it/</guid>
            <description>Problem You are given a function f(X) = X^2. You are also given K lists. The ith list consists of N_i elements.
You have to pick one element from each list so that the value from the equation below is maximized:
S = (f(X_1) + f(X_2) + &amp;hellip; + f(X_k)) % M
X_i denotes the element picked from the ith list. Find the maximized value S_max obtained.
% denotes the modulo operator.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>You are given a function f(X) = X^2. You are also given K lists. The ith list consists of N_i elements.</p>
<p>You have to pick one element from each list so that the value from the equation below is maximized:</p>
<p>S = (f(X_1) + f(X_2) + &hellip; + f(X_k)) % M</p>
<p>X_i denotes the element picked from the ith list. Find the maximized value S_max obtained.</p>
<p>% denotes the modulo operator.</p>
<p>Note that you need to take exactly one element from each list, not necessarily the largest element. You add the squares of the chosen elements and perform the modulo operation. The maximum value that you can obtain, will be the answer to the problem.</p>
<h2 id="solution">Solution</h2>
<pre><code>import itertools

(K, N) = map(int, input().strip().split())

L = list()
for i in range(K):
    L.append(list(map(int, input().strip().split(' ')))[1:])

S_max, L_max = 0, None
for l in itertools.product(*L):
    s = sum([x**2 for x in l]) % N

    if s &gt; S_max:
        S_max = s
        L_max = l

print(S_max)
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Merge the Tools!</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-merge-the-tools/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-merge-the-tools/</guid>
            <description>Problem Consider the following:
 A string, s, of length n where s=c0c1&amp;hellip;cn-1. An integer, k, where k is a factor of n.  We can split s into n/k subsegments where each subsegment, ti, consists of a contiguous block of k characters in s. Then, use each ti to create string ui such that:
 The characters in ui are a subsequence of the characters in ti. Any repeat occurrence of a character is removed from the string such that each character in ui occurs exactly once.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>Consider the following:</p>
<ul>
<li>A string, s, of length n where s=c0c1&hellip;cn-1.</li>
<li>An integer, k, where k is a factor of n.</li>
</ul>
<p>We can split s into n/k subsegments where each subsegment, ti, consists of a contiguous block of k characters in s. Then, use each ti to create string ui such that:</p>
<ul>
<li>The characters in ui are a subsequence of the characters in ti.</li>
<li>Any repeat occurrence of a character is removed from the string such that each character in ui occurs exactly once. In other words, if the character at some index j in ti occurs at a previous index &lt;j in ti, then do not include the character in string ui.</li>
</ul>
<p>Given s and k, print n/k lines where each line i denotes string ui.</p>
<h2 id="solution">Solution</h2>
<pre><code>def merge_the_tools(string, k):
    u, i = '', 1
    for c in string:
        if c not in u:
            u += c
        if i == k:
            i = 1
            print(u)
            u = ''
        else:
            i += 1
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: No Idea!</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-no-idea/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-no-idea/</guid>
            <description>Problem There is an array of n integers. There are also 2 disjoint sets, A and B, each containing m integers. You like all the integers in set A and dislike all the integers in set B. Your initial happiness is 0. For each i integer in the array, if i∈A, you add 1 to your happiness. If i∈B, you add -1 to your happiness. Otherwise, your happiness does not change.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>There is an array of n integers. There are also 2 disjoint sets, A and B, each containing m integers. You like all the integers in set A and dislike all the integers in set B. Your initial happiness is 0. For each i integer in the array, if i∈A, you add 1 to your happiness. If i∈B, you add -1 to your happiness. Otherwise, your happiness does not change. Output your final happiness at the end.</p>
<p><strong>Note:</strong> Since A and B are sets, they have no repeated elements. However, the array might contain duplicate elements.</p>
<h2 id="solution">Solution</h2>
<pre><code># Get the input values
_ = input()  # Don't care about 1st line
arr = list(map(int, input().split()))
a = set(map(int, input().split()))
b = set(map(int, input().split()))

score = 0
for n in arr:
    if n in a:
        score += 1
    elif n in b:
        score -=1
print(score)
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Piling Up!</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-piling-up/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-piling-up/</guid>
            <description>Problem There is a horizontal row of n cubes. The length of each cube is given. You need to create a new vertical pile of cubes. The new pile should follow these directions: if cube_i is on top of cube_j then sideLength_j ≥ sideLength_i.
When stacking the cubes, you can only pick up either the leftmost or the rightmost cube each time. Print &amp;ldquo;Yes&amp;rdquo; if it is possible to stack the cubes.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>There is a horizontal row of n cubes. The length of each cube is given. You need to create a new vertical pile of cubes. The new pile should follow these directions: if cube_i is on top of cube_j then sideLength_j ≥ sideLength_i.</p>
<p>When stacking the cubes, you can only pick up either the leftmost or the rightmost cube each time. Print &ldquo;Yes&rdquo; if it is possible to stack the cubes. Otherwise, print &ldquo;No&rdquo;. Do not print the quotation marks.</p>
<h2 id="solution">Solution</h2>
<pre><code>from collections import deque

for _ in range(int(input())):
    _ = input()
    h = deque(map(int, input().split()))
    
    res, v = '', 2**31
    l, r = h.popleft(), h.pop()
    while res == '':
        # print('v={},l={},r={},h={}'.format(v,l,r,list(h)))
        if l &gt;= r and l &lt;= v:
            v = l
            if len(h) == 0:
                res = 'Yes'
                break
            l = h.popleft()
        elif r &gt; l and r &lt;= v:
            v = r
            if len(h) == 0:
                res = 'Yes'
                break
            r = h.pop()
        else:
            res = 'No'
    print(res)
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Reduce Function</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-reduce-function/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-reduce-function/</guid>
            <description>Problem Given a list of rational numbers,find their product.
Concept The reduce() function applies a function of two arguments cumulatively on a list of objects in succession from left to right to reduce it to one value. Say you have a list, say [1,2,3] and you have to find its sum.
&amp;gt;&amp;gt;&amp;gt; reduce(lambda x, y : x + y,[1,2,3])6You can also define an initial value. If it is specified, the function will assume initial value as the value given, and then reduce.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>Given a list of rational numbers,find their product.</p>
<h3 id="concept">Concept</h3>
<p>The reduce() function applies a function of two arguments cumulatively on a list of objects in succession from left to right to reduce it to one value. Say you have a list, say [1,2,3] and you have to find its sum.</p>
<pre><code>&gt;&gt;&gt; reduce(lambda x, y : x + y,[1,2,3])
6
</code></pre><p>You can also define an initial value. If it is specified, the function will assume initial value as the value given, and then reduce. It is equivalent to adding the initial value at the beginning of the list. For example:</p>
<pre><code>&gt;&gt;&gt; reduce(lambda x, y : x + y, [1,2,3], -3)
3

&gt;&gt;&gt; from fractions import gcd
&gt;&gt;&gt; reduce(gcd, [2,4,8], 3)
1
</code></pre><h2 id="solution">Solution</h2>
<pre><code>from fractions import Fraction
from functools import reduce

def product(fracs):
    t = reduce(lambda x,y: Fraction(x.numerator*y.numerator,x.denominator*y.denominator) , fracs)
    return t.numerator, t.denominator

if __name__ == '__main__':
    fracs = []
    for _ in range(int(input())):
        fracs.append(Fraction(*map(int, input().split())))
    result = product(fracs)
    print(*result)
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Regex Substitution</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-regex-substitution/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-regex-substitution/</guid>
            <description>Problem The re.sub() tool (sub stands for substitution) evaluates a pattern and, for each valid match, it calls a method (or lambda). The method is called for all matches and can be used to modify strings in different ways. The re.sub() method returns the modified string as an output.
Learn more about re.sub().
Transformation of Strings Code
import re#Squaring numbersdef square(match):number = int(match.group(0))return str(number**2)print re.sub(r&amp;quot;\d+&amp;quot;, square, &amp;quot;1 2 3 4 5 6 7 8 9&amp;quot;)Output</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>The re.sub() tool (sub stands for substitution) evaluates a pattern and, for each valid match, it calls a method (or lambda).
The method is called for all matches and can be used to modify strings in different ways.
The re.sub() method returns the modified string as an output.</p>
<p>Learn more about re.sub().</p>
<h3 id="transformation-of-strings">Transformation of Strings</h3>
<p>Code</p>
<pre><code>import re

#Squaring numbers
def square(match):
    number = int(match.group(0))
    return str(number**2)

print re.sub(r&quot;\d+&quot;, square, &quot;1 2 3 4 5 6 7 8 9&quot;)
</code></pre><p>Output</p>
<pre><code>1 4 9 16 25 36 49 64 81
</code></pre><h3 id="replacements-in-strings">Replacements in Strings</h3>
<p>Code</p>
<pre><code>import re

html = &quot;&quot;&quot;
&lt;head&gt;
&lt;title&gt;HTML&lt;/title&gt;
&lt;/head&gt;
&lt;object type=&quot;application/x-flash&quot; 
  data=&quot;your-file.swf&quot; 
  width=&quot;0&quot; height=&quot;0&quot;&gt;
  &lt;!-- &lt;param name=&quot;movie&quot;  value=&quot;your-file.swf&quot; /&gt; --&gt;
  &lt;param name=&quot;quality&quot; value=&quot;high&quot;/&gt;
&lt;/object&gt;
&quot;&quot;&quot;

print re.sub(&quot;(&lt;!--.*?--&gt;)&quot;, &quot;&quot;, html) #remove comment
</code></pre><p>Output</p>
<pre><code>&lt;head&gt;
&lt;title&gt;HTML&lt;/title&gt;
&lt;/head&gt;
&lt;object type=&quot;application/x-flash&quot; 
  data=&quot;your-file.swf&quot; 
  width=&quot;0&quot; height=&quot;0&quot;&gt;

  &lt;param name=&quot;quality&quot; value=&quot;high&quot;/&gt;
&lt;/object&gt;
</code></pre><h3 id="task">Task</h3>
<p>You are given a text of N lines. The text contains &amp;&amp; and || symbols.
Your task is to modify those symbols to the following:</p>
<pre><code>&amp;&amp; → and
|| → or
</code></pre><p>Both &amp;&amp; and || should have a space &quot; &quot; on both sides.</p>
<h2 id="solution">Solution</h2>
<pre><code>import re
for _ in range(int(input())):
    s = re.sub(r'(?&lt;=\s)\&amp;\&amp;(?=\s)', 'and', input())
    s = re.sub(r'(?&lt;=\s)\|\|(?=\s)', 'or', s)
    print(s)
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: The Minion Game</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-the-minion-game/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-the-minion-game/</guid>
            <description>Problem Kevin and Stuart want to play the &amp;lsquo;The Minion Game&amp;rsquo;.
Game Rules Both players are given the same string, . Both players have to make substrings using the letters of the string . Stuart has to make words starting with consonants. Kevin has to make words starting with vowels. The game ends when both players have made all possible substrings.
Scoring A player gets +1 point for each occurrence of the substring in the string .</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>Kevin and Stuart want to play the &lsquo;The Minion Game&rsquo;.</p>
<h3 id="game-rules">Game Rules</h3>
<p>Both players are given the same string, .
Both players have to make substrings using the letters of the string .
Stuart has to make words starting with consonants.
Kevin has to make words starting with vowels.
The game ends when both players have made all possible substrings.</p>
<h3 id="scoring">Scoring</h3>
<p>A player gets +1 point for each occurrence of the substring in the string .</p>
<h3 id="for-example">For Example:</h3>
<p>String  = BANANA
Kevin&rsquo;s vowel beginning word = ANA
Here, ANA occurs twice in BANANA. Hence, Kevin will get 2 Points.</p>
<p>Your task is to determine the winner of the game and their score.</p>
<h3 id="solution">Solution</h3>
<pre><code>def minion_game(string):
    scores = {'Kevin': 0, 'Stuart': 0}
    for i in range(len(string)):
        if string[i] in 'AEIOU':
            scores['Kevin'] += len(string) - i
        else:
            scores['Stuart'] += len(string) - i
    
    if scores['Stuart'] == scores['Kevin']:
        print('Draw')
    elif scores['Stuart'] &gt; scores['Kevin']:
        print(&quot;Stuart {}&quot;.format(scores['Stuart']))
    else:
        print('Kevin {}'.format(scores['Kevin']))
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Time Delta</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-time-delta/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-time-delta/</guid>
            <description>Problem When users post an update on social media,such as a URL, image, status update etc., other users in their network are able to view this new post on their news feed. Users can also see exactly when the post was published, i.e, how many hours, minutes or seconds ago.
Since sometimes posts are published and viewed in different time zones, this can be confusing. You are given two timestamps of one such post that a user can see on his newsfeed in the following format:</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>When users post an update on social media,such as a URL, image, status update etc., other users in their network are able to view this new post on their news feed. Users can also see exactly when the post was published, i.e, how many hours, minutes or seconds ago.</p>
<p>Since sometimes posts are published and viewed in different time zones, this can be confusing. You are given two timestamps of one such post that a user can see on his newsfeed in the following format:</p>
<p>Day dd Mon yyyy hh:mm:ss +xxxx</p>
<p>Here +xxxx represents the time zone. Your task is to print the absolute difference (in seconds) between them.</p>
<h2 id="solution">Solution</h2>
<pre><code>from datetime import datetime as dt

fmt = '%a %d %b %Y %H:%M:%S %z'
for i in range(int(input())):
    print(int(abs((dt.strptime(input(), fmt) - 
                   dt.strptime(input(), fmt)).total_seconds())))
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Triangle Quest</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-triangle-quest/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-triangle-quest/</guid>
            <description>Problem You are given a positive integer N. Print a numerical triangle of height N-1 like the one below:
122333444455555......Can you do it using only arithmetic operations, a single for loop and print statement?
Use no more than two lines. The first line (the for statement) is already written for you. You have to complete the print statement.
Note: Using anything related to strings will give a score of 0.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>You are given a positive integer N. Print a numerical triangle of height N-1 like the one below:</p>
<pre><code>1
22
333
4444
55555
......
</code></pre><p>Can you do it using only arithmetic operations, a single for loop and print statement?</p>
<p>Use no more than two lines. The first line (the for statement) is already written for you. You have to complete the print statement.</p>
<p>Note: Using anything related to strings will give a score of 0.</p>
<h2 id="solution">Solution</h2>
<pre><code>for i in range(1,int(input())):
    print(10**i//9*i)
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Triangle Quest 2</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-triangle-quest-2/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-triangle-quest-2/</guid>
            <description>Problem You are given a positive integer N. Your task is to print a palindromic triangle of size N.
For example, a palindromic triangle of size 5 is:
1121123211234321123454321You can&amp;rsquo;t take more than two lines. The first line (a for-statement) is already written for you. You have to complete the code using exactly one print statement.
Note: Using anything related to strings will give a score of .</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>You are given a positive integer N.
Your task is to print a palindromic triangle of size N.</p>
<p>For example, a palindromic triangle of size 5 is:</p>
<pre><code>1
121
12321
1234321
123454321
</code></pre><p>You can&rsquo;t take more than two lines. The first line (a for-statement) is already written for you.
You have to complete the code using exactly one print statement.</p>
<p><strong>Note:</strong>
Using anything related to strings will give a score of .
Using more than one for-statement will give a score of .</p>
<h2 id="solution">Solution</h2>
<pre><code>for i in range(1,int(input())+1):
    print((10**i//9)**2)
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Validating Credit Card Numbers</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-validating-credit-card-numbers/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-validating-credit-card-numbers/</guid>
            <description>Problem You and Fredrick are good friends. Yesterday, Fredrick received credit cards from ABCD Bank. He wants to verify whether his credit card numbers are valid or not. You happen to be great at regex so he is asking for your help!
A valid credit card from ABCD Bank has the following characteristics:
► It must start with a 4, 5 or 6. ► It must contain exactly 16 digits. ► It must only consist of digits (0-9).</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>You and Fredrick are good friends. Yesterday, Fredrick received  credit cards from ABCD Bank. He wants to verify whether his credit card numbers are valid or not. You happen to be great at regex so he is asking for your help!</p>
<p>A valid credit card from ABCD Bank has the following characteristics:</p>
<p>► It must start with a 4, 5 or 6.
► It must contain exactly 16 digits.
► It must only consist of digits (0-9).
► It may have digits in groups of 4, separated by one hyphen &ldquo;-&rdquo;.
► It must NOT use any other separator like ' ' , &lsquo;_&rsquo;, etc.
► It must NOT have 4 or more consecutive repeated digits.</p>
<h3 id="examples">Examples:</h3>
<p>Valid Credit Card Numbers</p>
<pre><code>4253625879615786
4424424424442444
5122-2368-7954-3214
</code></pre><p>Invalid Credit Card Numbers</p>
<pre><code>42536258796157867       #17 digits in card number → Invalid 
4424444424442444        #Consecutive digits are repeating 4 or more times → Invalid
5122-2368-7954 - 3214   #Separators other than '-' are used → Invalid
44244x4424442444        #Contains non digit characters → Invalid
0525362587961578        #Doesn't start with 4, 5 or 6 → Invalid
</code></pre><h2 id="solution">Solution</h2>
<pre><code>import re

for _ in range(int(input())):
    s = input()
    if not re.match(r'^[4-6]\d{3}-?\d{4}-?\d{4}-?\d{4}$', s):
        print('Invalid')
    else:
        if re.search(r'(\d)\1\1\1', re.sub(r'-', '', s)):
            print('Invalid')
        else:
            print('Valid')
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Validating Email Addresses with a Filter</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-validating-email-addresses-with-a-filter/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-validating-email-addresses-with-a-filter/</guid>
            <description>Problem You are given an integer N followed by N email addresses. Your task is to print a list containing only valid email addresses in lexicographical order.
Valid email addresses must follow these rules:
 It must have the username@websitename.extension format type. The username can only contain letters, digits, dashes and underscores. The website name can only have letters and digits. The maximum length of the extension is .  Concept A filter takes a function returning True or False and applies it to a sequence, returning a list of only those members of the sequence where the function returned True.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>You are given an integer N followed by N email addresses. Your task is to print a list containing only valid email addresses in lexicographical order.</p>
<p>Valid email addresses must follow these rules:</p>
<ul>
<li>It must have the <a href="mailto:username@websitename.extension">username@websitename.extension</a> format type.</li>
<li>The username can only contain letters, digits, dashes and underscores.</li>
<li>The website name can only have letters and digits.</li>
<li>The maximum length of the extension is .</li>
</ul>
<h3 id="concept">Concept</h3>
<p>A filter takes a function returning True or False and applies it to a sequence, returning a list of only those members of the sequence where the function returned True. A Lambda function can be used with filters.</p>
<p>Let&rsquo;s say you have to make a list of the squares of integers from 0 to 9 (both included).</p>
<pre><code>&gt;&gt; l = list(range(10))
&gt;&gt; l = list(map(lambda x:x*x, l))
</code></pre><p>Now, you only require those elements that are greater than 10 but less than 80.</p>
<pre><code>&gt;&gt; l = list(filter(lambda x: x &gt; 10 and x &lt; 80, l))
</code></pre><p>Easy, isn&rsquo;t it?</p>
<h2 id="solution">Solution</h2>
<pre><code>import re

def fun(s):
    return re.match(r'^[A-Za-z0-9\-_]+@[A-Za-z0-9]+\.[A-Za-z]{1,3}$', s)
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Validating Matrix Script</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-validating-matrix-script/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-validating-matrix-script/</guid>
            <description>Problem Neo has a complex matrix script. The matrix script is a N X M grid of strings. It consists of alphanumeric characters, spaces and symbols (!,@,#,$,%,&amp;amp;).
To decode the script, Neo needs to read each column and select only the alphanumeric characters and connect them. Neo reads the column from top to bottom and starts reading from the leftmost column.
If there are symbols or spaces between two alphanumeric characters of the decoded script, then Neo replaces them with a single space &#39; &#39; for better readability.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>Neo has a complex matrix script. The matrix script is a N X M grid of strings. It consists of alphanumeric characters, spaces and symbols (!,@,#,$,%,&amp;).</p>
<p>To decode the script, Neo needs to read each column and select only the alphanumeric characters and connect them. Neo reads the column from top to bottom and starts reading from the leftmost column.</p>
<p>If there are symbols or spaces between two alphanumeric characters of the decoded script, then Neo replaces them with a single space ' ' for better readability.</p>
<p>Neo feels that there is no need to use &lsquo;if&rsquo; conditions for decoding.</p>
<p>Alphanumeric characters consist of: [A-Z, a-z, and 0-9].</p>
<h2 id="solution">Solution</h2>
<pre><code>#!/bin/python3

import math
import os
import random
import re
import sys

first_multiple_input = input().rstrip().split()
n = int(first_multiple_input[0])
m = int(first_multiple_input[1])
matrix = []

for _ in range(n):
    matrix_item = input()
    matrix.append(matrix_item)

s = ''  # Create string
for i in range(m):
    for r in matrix:
        s += r[i]

s = re.sub(r'(?&lt;=[A-Za-z0-9])[!@#$%&amp; ]+(?=[A-Za-z0-9])', ' ', s)

print(s)
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Validating Postal Codes</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-validating-postal-codes/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-validating-postal-codes/</guid>
            <description>Problem A valid postal code P have to fullfil both below requirements:
 P must be a number in the range from to inclusive. P must not contain more than one alternating repetitive digit pair.  Alternating repetitive digits are digits which repeat immediately after the next digit. In other words, an alternating repetitive digit pair is formed by two equal digits that have just a single digit between them.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>A valid postal code P have to fullfil both below requirements:</p>
<ol>
<li>P must be a number in the range from  to  inclusive.</li>
<li>P must not contain more than one alternating repetitive digit pair.</li>
</ol>
<p>Alternating repetitive digits are digits which repeat immediately after the next digit. In other words, an alternating repetitive digit pair is formed by two equal digits that have just a single digit between them.</p>
<p>For example:</p>
<pre><code>121426 # Here, 1 is an alternating repetitive digit.
523563 # Here, NO digit is an alternating repetitive digit.
552523 # Here, both 2 and 5 are alternating repetitive digits.
</code></pre><p>Your task is to provide two regular expressions regex_integer_in_range and regex_alternating_repetitive_digit_pair. Where:</p>
<p>regex_integer_in_range should match only integers range from 100000 to 999999 inclusive</p>
<p>regex_alternating_repetitive_digit_pair should find alternating repetitive digits pairs in a given string.</p>
<p>Both these regular expressions will be used by the provided code template to check if the input string P is a valid postal code using the following expression:</p>
<pre><code>(bool(re.match(regex_integer_in_range, P)) 
and len(re.findall(regex_alternating_repetitive_digit_pair, P)) &lt; 2)
</code></pre><h2 id="solution">Solution</h2>
<pre><code>regex_integer_in_range = r&quot;^[1-9][0-9]{5}$&quot;
regex_alternating_repetitive_digit_pair = r&quot;(\d)(?=\d\1)&quot;
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Word Order</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-word-order/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-word-order/</guid>
            <description>Problem You are given n words. Some words may repeat. For each word, output its number of occurrences. The output order should correspond with the input order of appearance of the word. See the sample input/output for clarification.
Note: Each input line ends with a &amp;ldquo;\n&amp;rdquo; character.
Solution from collections import OrderedDictd = OrderedDict()for _ in range(int(input())):line = input()if line in d:d[line] += 1else:d[line] = 1print(len(d))print(&#39; &#39;.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>You are given n words. Some words may repeat. For each word, output its number of occurrences. The output order should correspond with the input order of appearance of the word. See the sample input/output for clarification.</p>
<p>Note: Each input line ends with a &ldquo;\n&rdquo; character.</p>
<h2 id="solution">Solution</h2>
<pre><code>from collections import OrderedDict
d = OrderedDict()
for _ in range(int(input())):
    line = input()
    if line in d:
        d[line] += 1
    else:
        d[line] = 1
print(len(d))
print(' '.join([str(d[i]) for i in d.keys()]))
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Words Score</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-words-score/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-words-score/</guid>
            <description>Problem In this challenge, the task is to debug the existing code to successfully execute all provided test files.
Consider that vowels in the alphabet are a, e, i, o, u and y.
Function score_words takes a list of lowercase words as an argument and returns a score as follows:
The score of a single word is 2 if the word contains an even number of vowels. Otherwise, the score of this word is 1.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>In this challenge, the task is to debug the existing code to successfully execute all provided test files.</p>
<p>Consider that vowels in the alphabet are a, e, i, o, u and y.</p>
<p>Function score_words takes a list of lowercase words as an argument and returns a score as follows:</p>
<p>The score of a single word is 2 if the word contains an even number of vowels. Otherwise, the score of this word is 1. The score for the whole list of words is the sum of scores of all words in the list.</p>
<p>Debug the given function score_words such that it returns a correct score.</p>
<p>Your function will be tested on several cases by the locked template code.</p>
<h2 id="solution">Solution</h2>
<pre><code>def is_vowel(letter):
    return letter in ['a', 'e', 'i', 'o', 'u', 'y']

def score_words(words):
    score = 0
    for word in words:
        num_vowels = 0
        for letter in word:
            if is_vowel(letter):
                num_vowels += 1
        if num_vowels % 2 == 0:
            score += 2
        else:
            score += 1
    return score
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hackerrank: Write a Function</title>
            <link>https://dea.gl/posts/2020/09/hackerrank-write-a-function/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/09/hackerrank-write-a-function/</guid>
            <description>Problem An extra day is added to the calendar almost every four years as February 29, and the day is called a leap day. It corrects the calendar for the fact that our planet takes approximately 365.25 days to orbit the sun. A leap year contains a leap day.
In the Gregorian calendar, three conditions are used to identify leap years:
 The year can be evenly divided by 4, is a leap year, unless:  The year can be evenly divided by 100, it is NOT a leap year, unless:  The year is also evenly divisible by 400.</description>
            <content type="html"><![CDATA[<h2 id="problem">Problem</h2>
<p>An extra day is added to the calendar almost every four years as February 29, and the day is called a leap day. It corrects the calendar for the fact that our planet takes approximately 365.25 days to orbit the sun. A leap year contains a leap day.</p>
<p>In the Gregorian calendar, three conditions are used to identify leap years:</p>
<ul>
<li>The year can be evenly divided by 4, is a leap year, unless:
<ul>
<li>The year can be evenly divided by 100, it is NOT a leap year, unless:
<ul>
<li>The year is also evenly divisible by 400. Then it is a leap year.
This means that in the Gregorian calendar, the years 2000 and 2400 are leap years, while 1800, 1900, 2100, 2200, 2300 and 2500 are NOT leap years. Source</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="task">Task</h3>
<p>Given a year, determine whether it is a leap year. If it is a leap year, return the Boolean True, otherwise return False.</p>
<p>Note that the code stub provided reads from STDIN and passes arguments to the is_leap function. It is only necessary to complete the is_leap function.</p>
<h3 id="solution">Solution</h3>
<pre><code>def is_leap(year):
    return (year % 4 == 0) and ((year % 100 != 0) or (year % 400 == 0))
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Hands-On with TLS/SSL Certificates</title>
            <link>https://dea.gl/posts/2020/08/hands-on-with-tls/ssl-certificates/</link>
            <pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/08/hands-on-with-tls/ssl-certificates/</guid>
            <description>Introduction In this post, I&amp;rsquo;ll discuss TLS/SSL certificates. To learn more than just the theory, I&amp;rsquo;ll be acting as my own Certificate Authority, which will allow me to generate all the required files for TLS/SSL communication.
What is SSL/TLS? SSL and TLS are both cryptographic protocols used to increase security by encrypting communication over computer networks. SSL stands for Secure Sockets Layer while TLS stands for Transport Layer Security. TLS is the successor of SSL 3.</description>
            <content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>
<p>In this post, I&rsquo;ll discuss TLS/SSL certificates. To learn more than just the theory, I&rsquo;ll be acting as my own Certificate Authority, which will allow me to generate all the required files for TLS/SSL communication.</p>
<h2 id="what-is-ssltls">What is SSL/TLS?</h2>
<p>SSL and TLS are both cryptographic protocols used to increase security by encrypting communication over computer networks. SSL stands for <strong>Secure Sockets Layer</strong> while TLS stands for <strong>Transport Layer Security</strong>. TLS is the successor of SSL 3.0 and is now the standard (although both methods are still commonly referred to as SSL).</p>
<h2 id="becoming-a-certificate-authority">Becoming a Certificate Authority</h2>
<h3 id="step-1-generate-a-key">Step 1. Generate a key</h3>
<pre><code>openssl genrsa -des3 -out ca.key 2048
</code></pre><p>In this command, we&rsquo;re using the <strong>openssl</strong> tool to generate an RSA key (<strong>genrsa</strong>). With the <strong>-des3</strong> option, we&rsquo;re using the <a href="https://en.wikipedia.org/wiki/Triple_DES">triple DES</a> engine to encrypt the key. This option requires us to use a password whenever we want to use this key, which adds an essential layer of security.</p>
<p>We&rsquo;re telling the openssl tool to generate a key <strong>2048</strong> bits long, and output to <strong>ca.key</strong>.</p>
<h3 id="step-2-generate-a-root-certificate">Step 2. Generate a Root Certificate</h3>
<pre><code>openssl req -new -x509 -key ca.key -sha256 -days 365000 -out ca.pem
</code></pre><p>The <strong>openssl req</strong> command creates and processes certificate requests. It can also create self-signed certificates, which is what we&rsquo;re using it for, by giving it the <strong>-new -x509</strong> options.</p>
<p>We&rsquo;re using the <strong>sha256</strong> digest to sign this certificate with our previously generated key, <strong>ca.key</strong>.</p>
<p>We&rsquo;re also making this certificate valid for 1,000 years (365000 days) because it&rsquo;s self-signed, so expiry isn&rsquo;t too important.</p>
<p>Congratulations! You are now officially a <strong>Certificate Authority</strong>.</p>
<h2 id="getting-people-to-trust-your-authority">Getting People to Trust Your Authority</h2>
<p>Being a Certificate Authority doesn&rsquo;t mean much if nobody respects your authority.</p>
<p>The real Certificate Authorities will join, for example, <a href="https://docs.microsoft.com/en-us/security/trusted-root/program-requirements">Microsoft&rsquo;s Trusted Root Program</a> and have their certificates automatically installed on all Windows distributions.</p>
<p>Because we&rsquo;re just generating these for personal use, we&rsquo;ll have to manually install them on every device we want to trust us.</p>
<h3 id="1-installation-on-windows">1. Installation on Windows</h3>
<ul>
<li>Double-click on the <strong>certificate.crt</strong> file</li>
<li>Click on <strong>Install Certificate…</strong> then <strong>Current User</strong></li>
<li>Select <strong>Place all certificates in the following store</strong></li>
<li>Browse to <strong>Trusted Root Certificate Authorities</strong></li>
<li>Click <strong>Next</strong> and then click <strong>Finish</strong></li>
</ul>
<h3 id="2-installation-on-android">2. Installation on Android</h3>
<ul>
<li>Go to <strong>Settings</strong> » <strong>Security</strong> » <strong>Encryption &amp; credentials</strong></li>
<li>Go to <strong>Install from storage</strong> and select your certificate</li>
<li>Give the certificate a memorable name and select <strong>Wi-Fi</strong></li>
</ul>
<h3 id="3-installation-on-macos">3. Installation on MacOS</h3>
<ul>
<li>Open the macOS Keychain app, and go to <strong>File &gt; Import Items…</strong></li>
<li>Select your private key file, then search for the Common Name name</li>
<li>Double click on your certificate and expand the Trust section</li>
<li>Change <strong>When using this certificate</strong> to <strong>Always Trust</strong></li>
</ul>
<pre><code>sudo security add-trusted-cert -d -r trustRoot -k &quot;/Library/Keychains/System.keychain&quot; certificate.crt
</code></pre><h3 id="4-installation-on-ios">4. Installation on iOS</h3>
<ul>
<li>Go to <strong>Settings</strong> » <strong>Profile Downloaded</strong> » <strong>Install</strong></li>
<li>Go to <strong>Settings</strong> » <strong>General</strong> » <strong>About</strong></li>
<li>Scroll to the bottom and select <strong>Certificate Trust Settings</strong></li>
<li>Select <strong>Enable Full Trust for Root Certificates</strong></li>
</ul>
<h2 id="signing-certificates-as-a-certificate-authority">Signing Certificates as a Certificate Authority</h2>
<p>For SSL/TLS, web servers need two things:</p>
<ol>
<li>A private key, to encrypt traffic</li>
<li>A certificate, which serves as a public key and proof the webserver in question owns the domain.</li>
</ol>
<h3 id="step-1-generate-a-private-key">Step 1. Generate a Private Key</h3>
<p>It&rsquo;s helpful (but not necessary) to name the key, and all files we generate, based on the webserver we&rsquo;re running. In our example, we&rsquo;ll use <em>example.com</em>.</p>
<pre><code>openssl genrsa -out example.com.key 2048
</code></pre><p>This time we won&rsquo;t be password-protecting this key with the <strong>-des3</strong> option, like we did with our Root CA key.</p>
<h3 id="step-2-generate-a-certificate-signing-request">Step 2. Generate a Certificate Signing Request</h3>
<p>Even though we&rsquo;re the ones signing our certificate, in most situations, a different entity will be signing our certificate, so the workflow is:</p>
<ol>
<li>Generate a certificate signing request</li>
<li>Fulfill the certificate signing request with our ca private key</li>
</ol>
<p>We generate the certificate signing request (CSR) with the following command:</p>
<pre><code>openssl req -new -key example.com.key -out example.com.csr
</code></pre><p>We&rsquo;ll also need to configure the proper extensions for the certificate to work with most protocols. For that we&rsquo;ll create an extension config file, named example.com.ext, with the following contents:</p>
<pre><code>authorityKeyIdentifier=keyid
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
subjectAltName = @alt_names

[alt_names]
DNS.1 = example.com
</code></pre><h3 id="step-3-fulfill-the-certificate-signing-request">Step 3. Fulfill the Certificate Signing Request</h3>
<p>We fulfill our certificate signing process by generating our new certificate, signed with our Root Certificate Authority key.</p>
<pre><code>openssl x509 -req -in example.com.csr -CA ca.pem -CAkey ca.key -CAcreateserial -out example.com.crt -days 825 -sha256 -extfile example.com.ext
</code></pre><p>We should now have <strong>example.com.crt</strong> to go along with our <strong>example.com.key</strong>, which is all we need to enable TLS/SSL on our website. Below is an example of an Apache configuration that utilizes our newly generated certificate and key.</p>
<pre><code>&lt;VirtualHost *:80&gt;
        ServerName example.com
        ...
&lt;/VirtualHost&gt;

&lt;VirtualHost *:443&gt;
        ServerName example.com
        ...
        SSLCertificateFile /opt/cert/example.com.crt
        SSLCertificateKeyFile /opt/cert/example.com.key
&lt;/VirtualHost&gt;
</code></pre>]]></content>
        </item>
        
        <item>
            <title>An Overview of the HTTPS Protocol</title>
            <link>https://dea.gl/posts/2020/08/an-overview-of-the-https-protocol/</link>
            <pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate>
            
            <guid>https://dea.gl/posts/2020/08/an-overview-of-the-https-protocol/</guid>
            <description>How HTTPS Works Type facebook.com into your web browser, and you&amp;rsquo;ll see a little lock appear to the left of the URL. That lock means you are using HTTPS and signifies that your connection to facebook.com is secure.
Using HTTPS over the older, not secure, HTTP has two benefits:
 The website your browser is talking to has proven itself to be facebook.com and is not just pretending to be. The communications your browser sends to the website are encrypted so that no-one except your browser and the website can read them.</description>
            <content type="html"><![CDATA[<h2 id="how-https-works">How HTTPS Works</h2>
<p>Type facebook.com into your web browser, and you&rsquo;ll see a little lock appear to the left of the URL. That lock means you are using <em>HTTPS</em> and signifies that your connection to facebook.com is secure.</p>
<p>Using HTTPS over the older, not secure, HTTP has two benefits:</p>
<ol>
<li>The website your browser is talking to has proven itself to be facebook.com and is not just pretending to be.</li>
<li>The communications your browser sends to the website are encrypted so that no-one except your browser and the website can read them.</li>
</ol>
<p>Those communications can include usernames, passwords, credit card numbers, and other critical information you wouldn&rsquo;t want in the hands of anyone but the real facebook.com.</p>
<h2 id="ensuring-identity">Ensuring Identity</h2>
<p>Your browser trusts that the website truly is facebook.com because it has presented us with a <em>certificate</em> stating it is facebook.com. If you click the lock on your browser, you can view it yourself.</p>
<p>&ldquo;But why should you trust that certificate, you ask?&rdquo; Great question. Because, like real-world certificates, someone you should trust has signed it.</p>
<p>Inspecting facebook.com&rsquo;s certificate shows that DigiCert signed it.</p>
<p>&ldquo;Hold on. Who is DigiCert, and why should I trust them?&rdquo; you ask. Another great question. I like where your head&rsquo;s at.</p>
<p>Digicert is a <em>Certificate Authority</em>. That means they are an organization able to sign certificates to prove that they are valid.</p>
<p>I trust DigiCert because Microsoft trusts them, and because I run Windows, I have no choice but to trust Microsoft. Because Microsoft trusts DigiCert as a Certificate Authority, Windows trusts certificates signed by DigiCert.</p>
<p>You can view this information by searching for <strong>Manage computer certificates</strong> in your start menu. From there, click on <strong>Trusted Root Certification Authorities »  Certificates</strong>, and in that long list, you should see DigiCert.</p>
<p>Microsoft also publishes the list of Certificate Authorities <a href="https://ccadb-public.secure.force.com/microsoft/IncludedCACertificateReportForMSFT">here</a>. On that page, you can find DigiCert as well.</p>
<p>And so that&rsquo;s the chain of trust. You trust Microsoft because you run their operating system. Microsoft has said you can trust what DigiCert says. And finally, DigiCert has said, you can trust the server you&rsquo;re talking to is facebook.com.</p>
<p>You can rest easy knowing you&rsquo;re not sending private information to somebody pretending to be facebook.com.</p>
<h2 id="ensuring-privacy">Ensuring Privacy</h2>
<p>Even though that&rsquo;s the real facebook.com, who might be able to intercept those communications and read your private data? That&rsquo;s an easy enough question to answer. On Windows, open up a command prompt and type:</p>
<pre><code>tracert facebook.com
</code></pre><p>On Linux or Mac OS, type:</p>
<pre><code>traceroute facebook.com
</code></pre><p>That command displays all the intermediate servers your communications go through before making it to facebook.com. Each line is a different server, and the first line is likely your router.</p>
<p>Each item between your router and facebook.com is another server capable of reading all the unencrypted information you send to facebook.com. That can sometimes be dozens of servers that are not you, or facebook.com, in a position to read all communications between you and facebook.com.</p>
<h2 id="upgrading-to-https">Upgrading to HTTPS</h2>
<p>I hope you understand the value that HTTPS provides and the meaning behind that little lock symbol. There&rsquo;s really no downside to using HTTPS, so you should try to use it everywhere it&rsquo;s available.</p>
<p>How did it know to use HTTPS and not the regular old, unsafe HTTP when I typed in facebook.com?</p>
<p>Not all websites support HTTPS. So, when you type in facebook.com, your browser requested the HTTP version of facebook.com (<a href="http://facebook.com">http://facebook.com</a>). Facebook&rsquo;s servers then responded by redirecting you to the HTTPS version of the site (<a href="https://facebook.com">https://facebook.com</a>).</p>
<p>If you care to inspect the network traffic, you can see something like what&rsquo;s shown below. That&rsquo;s facebook telling your browser, &ldquo;We support HTTPS, and you&rsquo;re going to want to use that instead of regular old HTTP.&rdquo;</p>
<pre><code>General
  Request URL: http://facebook.com/
  Request Method: GET
  Status Code: 307 Internal Redirect
  Referrer Policy: no-referrer-when-downgrade
Response Headers:
  Location: https://facebook.com/
  Non-Authoritative-Reason: HSTS
...
</code></pre><p>That&rsquo;s very nice of Facebook to be looking out for my privacy and security. But we should be taking this into our own hands, and not depending on websites to upgrade us to HTTPS, and encrypt our communications.</p>
<p>Enter HTTPS Everywhere.</p>
<h2 id="https-everywhere">HTTPS Everywhere</h2>
<p><a href="https://www.eff.org/https-everywhere">HTTPS Everywhere</a> is a Firefox, Chrome, and Opera extension that encrypts your communications with many major websites, which makes your browsing more secure.</p>
<p>By using HTTPS Everywhere, you can rest easy knowing that your browser is doing everything it can, upgrade communications to HTTPS wherever possible, and not depend on websites themselves to secure communications.</p>
]]></content>
        </item>
        
    </channel>
</rss>
