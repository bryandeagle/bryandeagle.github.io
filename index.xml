<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bryan Deagle</title>
    <link>https://dea.gl/</link>
    <description>Recent content on Bryan Deagle</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 31 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://dea.gl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Learning About Man-in-the-Middle Attacks with a Raspberry Pi</title>
      <link>https://dea.gl/posts/learning-about-man-in-the-middle-attacks-with-a-raspberry-pi/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dea.gl/posts/learning-about-man-in-the-middle-attacks-with-a-raspberry-pi/</guid>
      <description>Setting up the Raspberry Pi I download the Raspberry Pi image from the official site
Securing the Raspberry Pi C
passwdI followed this article to add some reasonable security to the pi.
Since I&amp;rsquo;ve installed the firewall ufw, I&amp;rsquo;ll be allowing SSH, HTTP and HTTPS with the following commands
ufw allow SSHufw allow HTTPufw allow HTTPSConfiguring the Raspberry Pi as a Gateway Installing MITM Proxy apt update &amp;amp;&amp;amp; apt install mitmproxy</description>
    </item>
    
    <item>
      <title>Virtual Private Networks</title>
      <link>https://dea.gl/posts/virtual-private-networks/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dea.gl/posts/virtual-private-networks/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Hardening a Raspberry Pi</title>
      <link>https://dea.gl/posts/hardening-a-raspberry-pi/</link>
      <pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dea.gl/posts/hardening-a-raspberry-pi/</guid>
      <description>One of the most fun things to play around with today is a Raspberry Pi. I&amp;rsquo;m constantly re-imaging my Raspberry Pi ,a nd so this guide walks through steps to take each time to ensure your device is sufficiently secure.
The security of your Raspberry Pi is important. Gaps in security leave your Raspberry Pi open to hackers who can then use it without your permission.
What level of security you need depends on how you wish to use your Raspberry Pi.</description>
    </item>
    
    <item>
      <title>What is Project Management</title>
      <link>https://dea.gl/posts/what-is-project-management/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dea.gl/posts/what-is-project-management/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Hackerrank Python: Write a Function</title>
      <link>https://dea.gl/posts/hackerrank-python-write-a-function/</link>
      <pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dea.gl/posts/hackerrank-python-write-a-function/</guid>
      <description>Problem An extra day is added to the calendar almost every four years as February 29, and the day is called a leap day. It corrects the calendar for the fact that our planet takes approximately 365.25 days to orbit the sun. A leap year contains a leap day.
In the Gregorian calendar, three conditions are used to identify leap years:
 The year can be evenly divided by 4, is a leap year, unless:  The year can be evenly divided by 100, it is NOT a leap year, unless:  The year is also evenly divisible by 400.</description>
    </item>
    
    <item>
      <title>Hackerrank Python: Words Score</title>
      <link>https://dea.gl/posts/hackerrank-python-words-score/</link>
      <pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dea.gl/posts/hackerrank-python-words-score/</guid>
      <description>Problem In this challenge, the task is to debug the existing code to successfully execute all provided test files.
Consider that vowels in the alphabet are a, e, i, o, u and y.
Function score_words takes a list of lowercase words as an argument and returns a score as follows:
The score of a single word is 2 if the word contains an even number of vowels. Otherwise, the score of this word is 1.</description>
    </item>
    
    <item>
      <title>Hackerrank Python: Word Order</title>
      <link>https://dea.gl/posts/hackerrank-python-word-order/</link>
      <pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dea.gl/posts/hackerrank-python-word-order/</guid>
      <description>Problem You are given n words. Some words may repeat. For each word, output its number of occurrences. The output order should correspond with the input order of appearance of the word. See the sample input/output for clarification.
Note: Each input line ends with a &amp;ldquo;\n&amp;rdquo; character.
Solution from collections import OrderedDict d = OrderedDict() for _ in range(int(input())): line = input() if line in d: d[line] += 1 else: d[line] = 1 print(len(d)) print(&amp;#39; &amp;#39;.</description>
    </item>
    
    <item>
      <title>Hackerrank Python: Validating Postal Codes</title>
      <link>https://dea.gl/posts/hackerrank-python-validating-postal-codes/</link>
      <pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dea.gl/posts/hackerrank-python-validating-postal-codes/</guid>
      <description>Problem A valid postal code P have to fullfil both below requirements:
 P must be a number in the range from to inclusive. P must not contain more than one alternating repetitive digit pair.  Alternating repetitive digits are digits which repeat immediately after the next digit. In other words, an alternating repetitive digit pair is formed by two equal digits that have just a single digit between them.</description>
    </item>
    
    <item>
      <title>Hackerrank Python: Validating Credit Card Numbers</title>
      <link>https://dea.gl/posts/hackerrank-python-validating-credit-card-numbers/</link>
      <pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dea.gl/posts/hackerrank-python-validating-credit-card-numbers/</guid>
      <description>Problem You and Fredrick are good friends. Yesterday, Fredrick received credit cards from ABCD Bank. He wants to verify whether his credit card numbers are valid or not. You happen to be great at regex so he is asking for your help!
A valid credit card from ABCD Bank has the following characteristics:
► It must start with a 4, 5 or 6. ► It must contain exactly 16 digits. ► It must only consist of digits (0-9).</description>
    </item>
    
    <item>
      <title>Hackerrank Python: Validating Email Addresses with a Filter</title>
      <link>https://dea.gl/posts/hackerrank-python-validating-email-addresses-with-a-filter/</link>
      <pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dea.gl/posts/hackerrank-python-validating-email-addresses-with-a-filter/</guid>
      <description>Problem You are given an integer N followed by N email addresses. Your task is to print a list containing only valid email addresses in lexicographical order.
Valid email addresses must follow these rules:
 It must have the username@websitename.extension format type. The username can only contain letters, digits, dashes and underscores. The website name can only have letters and digits. The maximum length of the extension is .  Concept A filter takes a function returning True or False and applies it to a sequence, returning a list of only those members of the sequence where the function returned True.</description>
    </item>
    
  </channel>
</rss>
